function doGet(e) { 
  Logger.log( JSON.stringify(e) );  // view parameters
  var result = 'Ok'; // assume success
  if (e.parameter == 'undefined') {
    result = 'No Parameters';
  }
  else 
  { // added parameter to clear data
    var sheet_id = '1ks3A6OL4ROAFjQ3IEv3wym6lnPzHFIKkXkNGXrFOu5Q'; 		// Spreadsheet ID
    var sheet_name = "Sheet1"
    var sheet_open = SpreadsheetApp.openById(sheet_id).getActiveSheet();		// get Active sheet
    //var sheet_target = sheet_open.getSheetName(sheet_name);

    //var newRow = sheet_target.getLastRow() + 1;
    var newRow = sheet_open.getLastRow() + 1

    var rowDataLog = [];

    var Curr_Date = Utilities.formatDate(new Date (), "Asia/Jakarta", 'dd/MM/yyyy');
    rowDataLog[0] = Curr_Date;
    var Curr_Time = Utilities.formatDate(new Date(), "Asia/Jakarta", 'HH:mm:ss');
    rowDataLog[1] = Curr_Time;

    var sts_val = '';
    
    for (var param in e.parameter) {
      Logger.log('In for loop, param=' + param);
      var value = stripQuotes(e.parameter[param]);
      Logger.log(param + ':' + e.parameter[param]);
      switch (param) {
        /*case 'busVoltage': //Parameter 1, It has to be updated in Column in Sheets in the code, orderwise
          rowDataLog[2] = value; //Value in column C
          result += 'Written on column C';
          break;

        case 'shuntVoltage': //Parameter 2, It has to be updated in Column in Sheets in the code, orderwise
          rowDataLog[3] = value; //Value in column D
          result += ' Written on column D';
          break;
        */
        case 'loadVoltage': //Parameter 3, It has to be updated in Column in Sheets in the code, orderwise
          rowDataLog[2] = value; //Value in column E
          result += ' Written on column E';
          break;
        
        case 'current': //Parameter 4, It has to be updated in Column in Sheets in the code, orderwise
          rowDataLog[3] = value; //Value in column F
          result += ' Written on column F';
          break;
        
        case 'power': //Parameter 5, It has to be updated in Column in Sheets in the code, orderwise
          rowDataLog[4] = value; //Value in column G
          result += ' Written on column G';
          break;
        
        default:
          result += "unsupported parameter";
      }
    }
    // Conditions for writing data received from ESP32 to Google Sheets
      Logger.log(JSON.stringify(rowDataLog));
      //var newRangeDataLog = sheet_target.getRange(newRow, 1, 1, rowDataLog.length);
      var newRangeDataLog = sheet_open.getRange(newRow, 1, 1, rowDataLog.length);

      newRangeDataLog.setValues([rowDataLog]);

    }
      // Return result of operation
      return ContentService.createTextOutput(result);
  }
function stripQuotes( value ) {
  return value.replace(/^["']|['"]$/g, "");
}